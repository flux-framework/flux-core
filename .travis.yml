language: c

sudo: false

compiler:
  - gcc
  - clang
  - gcc+coverage
  - gcc+install

cache:
  directories:
    - $HOME/local
    - $HOME/.luarocks
    - $HOME/.ccache
    - $HOME/.local

addons:
  apt:
    sources:
    packages:
      - lua5.1
      - liblua5.1-0-dev
      - luarocks
      - uuid-dev
      - aspell
      - aspell-en
      - ccache
  coverity_scan:
    project:
      name: "grondo/flux-core"
      description: "Build submitted via Travis CI"
    notification_email: mark.grondona@gmail.com
    build_command_prepend: "./autogen.sh && ./configure"
    build_command:   "make -j 4"
    branch_pattern: coverity_scan

env:
  global:
   # The next declaration is the encrypted COVERITY_SCAN_TOKEN, created
   #   via the "travis encrypt" command using the project repo's public key
   - secure: "T06LmG6hAwmRculQGfmV06A0f2i9rPoc8itDwyWkmg2CbtCqDyYV93V53jsVknqKA1LA9+Yo7Q3bJnnEAWI7kWAptTcL5ipRycYkl5FqoYawkwRdQW3giZwbs9zRchrwFmZ03N0hRfl31IntXhDmj5EkHOZoduMpkQFFGo0XDC4="

before_install:
  # If CC has "+coverage" appended then turn on code coverage for this build:
  - case "$CC" in *+coverage) CC=${CC//+*}; export COVERAGE=t;; esac
  # Check if we should test installed flux:
  - case "$CC" in *+install)  CC=${CC//+*}; export T_INSTALL=t;; esac

  - test "$TRAVIS_PULL_REQUEST" == "false" || export CCACHE_READONLY=1
  - if test "$CC" = "clang"; then export CCACHE_CPP2=1; fi
  - eval $(./src/test/travis-dep-builder.sh --printenv)
  - ./src/test/travis-dep-builder.sh --cachedir=$HOME/local/.cache

  # coveralls-lcov required only for coveralls upload:
  - if test "$COVERAGE" = "t" ; then gem install coveralls-lcov; fi

  # Ensure we always use internal <flux/core.h> by placing a dummy file
  #  in the same path as ZMQ_FLAGS:
  - mkdir -p $HOME/local/include/flux
  - echo '#error Non-build-tree flux/core.h!' > $HOME/local/include/flux/core.h

script:
 - export LD_PRELOAD=libSegFault.so
 - export SEGFAULT_USE_ALTSTACK=1
 - export LIBC_FATAL_STDERR_=1
 - export CC="ccache $CC"
 - export MAKECMDS="make distcheck"

 # Travis has limited resources, even though number of processors might
 #  might appear to be large. Limit session size for testing to 5 to avoid
 #  spurious timeouts.
 - export FLUX_TEST_SIZE_MAX=5

 # Enable coverage for $CC-coverage build
 # We can't use distcheck here, it doesn't play well with coverage testing:
 - if test "$COVERAGE" = "t" ; then ARGS="--enable-code-coverage"; MAKECMDS="make && make check-code-coverage && lcov -l flux*-coverage.info"; fi
 # Use make install for T_INSTALL:
 - if test "$T_INSTALL" = "t" ; then ARGS="--prefix=/tmp/flux"; MAKECMDS="make && make install && /tmp/flux/bin/flux keygen && FLUX_TEST_INSTALLED_PATH=/tmp/flux/bin make check"; fi

 - export FLUX_TESTS_LOGFILE=t
 - if test "$COVERITY_SCAN_BRANCH" != "1" ; then ./autogen.sh && ./configure ${ARGS} && eval ${MAKECMDS}; fi

after_success:
 - ccache -s
 # Upload results to coveralls.io for first job of N
 - if test "$COVERAGE" = "t" ; then coveralls-lcov flux*-coverage.info ; fi

after_failure:
 - find . -name t[0-9]*.output | xargs -i sh -c 'printf "\033[31mFound {}\033[39m\n";cat {}'
 - find . -name *.broker.log | xargs -i sh -c 'printf "\033[31mFound {}\033[39m\n";cat {}'
